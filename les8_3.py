# ######################################
#  Создайте собственный класс-исключение, который должен проверять содержимое
#  списка на наличие только чисел. Проверить работу исключения на реальном примере. 
#  Запрашивать у пользователя данные и заполнять список необходимо только числами.
#  Класс-исключение должен контролировать типы данных элементов списка.
# Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, 
# пока пользователь сам не остановит работу скрипта, введя, например, команду «stop».
#  При этом скрипт завершается, сформированный список с числами выводится на экран.
# Подсказка: для этого задания примем, что пользователь может вводить только 
# числа и строки. Во время ввода пользователем очередного элемента необходимо
#  реализовать проверку типа элемента. Вносить его в список, только если введено 
#  число. Класс-исключение должен не позволить пользователю ввести текст (не число)
#  и отобразить соответствующее сообщение. При этом работа скрипта не должна завершаться.
# ########################################




class MyErr (Exception):
    def __init__(self, *args):
        self.my_list = []
        
    def myinput(self):   
        while True:
            try:
                num_1 = int(input("Введите значения и нажимайте Enter или 'n' для завершения"))
                self.my_list.append(num_1)
                print(f'Cписок - {self.my_list} \n ')
            except:
                print(f"Введите цифру или 'n' чтобы закончить")
                cont = input(f'Продолжить y/n ')
                cont = cont.lower()

                if cont == 'y':
                    print(try_except.myinput())
                elif cont == 'n':
                    return f'Конец'
                break
                    
                
try_except = MyErr(1)
print(try_except.myinput())

